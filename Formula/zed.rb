# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Zed < Formula
  desc "manage Authzed from your command line."
  homepage "https://authzed.com/"
  version "0.1.1"
  license "Apache-2.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/authzed/zed/releases/download/v0.1.1/zed_0.1.1_darwin_amd64.tar.gz", :using => CurlDownloadStrategy
      sha256 "f49153b12e13a9d15664fb054c6e0fc5f6109ede95f0531e733698144f0171dd"
    end
    if Hardware::CPU.arm?
      url "https://github.com/authzed/zed/releases/download/v0.1.1/zed_0.1.1_darwin_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "b241ba55dbacb7d628521741084415610e78df0d25e4148135ca494f33fecdd5"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/authzed/zed/releases/download/v0.1.1/zed_0.1.1_linux_amd64.tar.gz", :using => CurlDownloadStrategy
      sha256 "7f5bcdd2fa74ec357c9fea0599156b9b5cba98ac8fed3cfea6eb07684b78914a"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/authzed/zed/releases/download/v0.1.1/zed_0.1.1_linux_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "b46c6d65a3b360e688af6c12f3d0b5cc9c60e162c8dddbb1d78fb1e0520435c3"
    end
  end

  head "https://github.com/authzed/zed.git", :branch => "main"

  depends_on "go" => :build

  def install
    if !File.exists? "zed"
      system "go build --ldflags \"-s -w -X github.com/authzed/zed/internal/version.Version=$(git describe --always --abbrev=7 --dirty)\" ./cmd/zed"
    end
    bin.install "zed"
    (bash_completion/"zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "bash")
    (zsh_completion/"_zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "zsh")
    (fish_completion/"zed.fish").write Utils.safe_popen_read("#{bin}/zed", "completion", "fish")
  end

  test do
    system "#{bin}/zed version"
  end
end
