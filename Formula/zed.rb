# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Zed < Formula
  desc "manage Authzed from your command line."
  homepage "https://authzed.com/"
  version "0.1.3"
  license "Apache-2.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/authzed/zed/releases/download/v0.1.3/zed_0.1.3_darwin_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "06cba69c3ffc07e100b75414066fa10df7ba7b5425ecb562cd96538fe9c1ca13"
    end
    if Hardware::CPU.intel?
      url "https://github.com/authzed/zed/releases/download/v0.1.3/zed_0.1.3_darwin_amd64.tar.gz", :using => CurlDownloadStrategy
      sha256 "da2691f40906c6ef424302bc019737f4941dacf95cd0a01d7aca6d3be1ad9bde"
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/authzed/zed/releases/download/v0.1.3/zed_0.1.3_linux_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "dce99900e23cde674568b7a5edccdc2d82f844b32a5785452aea2ae77b1661be"
    end
    if Hardware::CPU.intel?
      url "https://github.com/authzed/zed/releases/download/v0.1.3/zed_0.1.3_linux_amd64.tar.gz", :using => CurlDownloadStrategy
      sha256 "cee9ae5fdfc949a0e839858261de45e3b2c20d6327a5463a8fc402b12a2efb5a"
    end
  end

  head "https://github.com/authzed/zed.git", :branch => "main"

  depends_on "go" => :build

  def install
    if !File.exists? "zed"
      system "go build --ldflags \"-s -w -X github.com/authzed/zed/internal/version.Version=$(git describe --always --abbrev=7 --dirty)\" ./cmd/zed"
    end
    bin.install "zed"
    (bash_completion/"zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "bash")
    (zsh_completion/"_zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "zsh")
    (fish_completion/"zed.fish").write Utils.safe_popen_read("#{bin}/zed", "completion", "fish")
  end

  test do
    system "#{bin}/zed version"
  end
end
