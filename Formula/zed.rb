# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Zed < Formula
  desc "manage Authzed from your command line."
  homepage "https://authzed.com/"
  version "0.1.2"
  license "Apache-2.0"
  bottle :unneeded

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/authzed/zed/releases/download/v0.1.2/zed_0.1.2_darwin_amd64.tar.gz", :using => CurlDownloadStrategy
      sha256 "24e2dacf188109da56efe392be93d2044d896d95e18f556dd1bca67c6faaa3aa"
    end
    if Hardware::CPU.arm?
      url "https://github.com/authzed/zed/releases/download/v0.1.2/zed_0.1.2_darwin_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "5b8c22f7f99baaa315dd6a8b7cad5a3f2702fc95f0aac2980c2abddb1e3792c5"
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/authzed/zed/releases/download/v0.1.2/zed_0.1.2_linux_amd64.tar.gz", :using => CurlDownloadStrategy
      sha256 "f4e6a9ebd0c52dd63ebdf43100bad94b6fae9c131b4914b95a3d6aee43519a2e"
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/authzed/zed/releases/download/v0.1.2/zed_0.1.2_linux_arm64.tar.gz", :using => CurlDownloadStrategy
      sha256 "fc3f7739ab56c9f3113e29bebef023323a71f0d17a06318722786771052b9849"
    end
  end

  head "https://github.com/authzed/zed.git", :branch => "main"

  depends_on "go" => :build

  def install
    if !File.exists? "zed"
      system "go build --ldflags \"-s -w -X github.com/authzed/zed/internal/version.Version=$(git describe --always --abbrev=7 --dirty)\" ./cmd/zed"
    end
    bin.install "zed"
    (bash_completion/"zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "bash")
    (zsh_completion/"_zed").write Utils.safe_popen_read("#{bin}/zed", "completion", "zsh")
    (fish_completion/"zed.fish").write Utils.safe_popen_read("#{bin}/zed", "completion", "fish")
  end

  test do
    system "#{bin}/zed version"
  end
end
