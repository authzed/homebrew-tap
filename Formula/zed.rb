# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Zed < Formula
  desc "command-line client for managing SpiceDB"
  homepage "https://github.com/authzed/zed"
  version "0.19.2"
  license "Apache-2.0"

  depends_on "go" => :build

  on_macos do
    on_intel do
      url "https://github.com/authzed/zed/releases/download/v0.19.2/zed_0.19.2_darwin_amd64.tar.gz"
      sha256 "8b507356ec09c6a31384a4a3053b6613be044153fb785d1d63abdd226440fd85"

      def install
        if build.head?
            versionVar = "github.com/jzelinskie/cobrautil/v2.Version"
            versionCmd = "$(git describe --always --abbrev=7 --dirty --tags)"
            system "go build --ldflags '-s -w -X #{versionVar}=#{versionCmd}' ./cmd/zed"
        end
        bin.install "zed"
        generate_completions_from_executable(bin/"zed", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    on_arm do
      url "https://github.com/authzed/zed/releases/download/v0.19.2/zed_0.19.2_darwin_arm64.tar.gz"
      sha256 "e36a602442d579dde3e661934ed84c0adefde711cb6445385da39b360d722c40"

      def install
        if build.head?
            versionVar = "github.com/jzelinskie/cobrautil/v2.Version"
            versionCmd = "$(git describe --always --abbrev=7 --dirty --tags)"
            system "go build --ldflags '-s -w -X #{versionVar}=#{versionCmd}' ./cmd/zed"
        end
        bin.install "zed"
        generate_completions_from_executable(bin/"zed", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/authzed/zed/releases/download/v0.19.2/zed_0.19.2_linux_amd64_gnu.tar.gz"
        sha256 "91494eb96cd3c82aa3bb0c68327700192063c0bcdb0aa74883d1a39c34ff033f"

        def install
          if build.head?
              versionVar = "github.com/jzelinskie/cobrautil/v2.Version"
              versionCmd = "$(git describe --always --abbrev=7 --dirty --tags)"
              system "go build --ldflags '-s -w -X #{versionVar}=#{versionCmd}' ./cmd/zed"
          end
          bin.install "zed"
          generate_completions_from_executable(bin/"zed", "completion", shells: [:bash, :zsh, :fish])
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/authzed/zed/releases/download/v0.19.2/zed_0.19.2_linux_arm64_gnu.tar.gz"
        sha256 "9865e4faa9c5d512672557c6b09c3f5dda0b92b6f42b7cfbbc88b36753b25363"

        def install
          if build.head?
              versionVar = "github.com/jzelinskie/cobrautil/v2.Version"
              versionCmd = "$(git describe --always --abbrev=7 --dirty --tags)"
              system "go build --ldflags '-s -w -X #{versionVar}=#{versionCmd}' ./cmd/zed"
          end
          bin.install "zed"
          generate_completions_from_executable(bin/"zed", "completion", shells: [:bash, :zsh, :fish])
        end
      end
    end
  end

  head "https://github.com/authzed/zed.git", :branch => "main"

  test do
    system "#{bin}/zed version"
  end
end
